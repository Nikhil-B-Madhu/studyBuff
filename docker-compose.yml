version: "3"
services:
  postgres:
    hostname: postgres
    image: "postgres:11.10-alpine"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      http_proxy: ""
      https_proxy: ""
      no_proxy: "127.0.0.1"
    ports:
      - "32768:5432"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://postgres:5432"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      study_buff_service_local_net:

  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
    networks:
      study_buff_service_local_net:

#  kafka1:
#    image: confluentinc/cp-kafka:5.3.0
#    hostname: kafka1
#    ports:
#      - "9091:9091"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#    volumes:
#      - ./data/kafka1/data:/var/lib/kafka/data
#    depends_on:
#      - zookeeper
#    networks:
#      study_buff_service_local_net:
#
#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    restart: "always"
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka1:19091"
#    depends_on:
#      - kafka1
#    networks:
#      study_buff_service_local_net:

  Elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: always
    volumes:
    - elastic_data:/usr/share/elasticsearch/data/
    environment:
      - xpack.security.enabled=true
      - xpack.security.audit.enabled=true
      - ELASTIC_PASSWORD=12312jkhfwdeldncxmfndsa67890wfndsvmdcs
      - "discovery.type=single-node"   
    ports:
    - '9200:9200'
    - '9300:9300'
    networks:
      study_buff_service_local_net:
  
  Kibana:
    image: kibana:7.16.2
    container_name: kibana
    restart: always       
    ports:
    - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200  
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=12312jkhfwdeldncxmfndsa67890wfndsvmdcs
    depends_on:
      - Elasticsearch  
    networks:
      study_buff_service_local_net:
  

  studybufffrontend:
    hostname: studybuff-frontend
    image: studybufffrontend:latest
    build:
      context: studyBuffUI
    depends_on:
      - universityservice
      - buffUserInfoService 
    ports:
      - "4200:80"
    networks:
      study_buff_service_local_net:
    deploy:
      resources:
        limits:
          memory: 126M
        reservations:
          memory: 50M

  universityservice:
    hostname: study-buff-university-service
    image: university-service:local
    build:
      context: universityService
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      - "postgres"
      - Elasticsearch
    networks:
      study_buff_service_local_net:

  buffUserInfoService:
    hostname: study-buff-user-info-service
    image: study-buff-user-info:local
    build:
      context: userInfoService
    ports:
      - "8080:8080"
    command: [ "npm", "run", "serve" ]
    environment:
      MESSAGEQ_URL: amqp://guest:guest@rabbitmq
      SQL_DB_URI: postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      - "postgres"
    networks:
      study_buff_service_local_net:

  mlEngineService:
    hostname: study-buff-ml-engine-service
    image: ml-engine-service:local
    build:
      context: mlEngine
    ports:
      - "9000:9000"
    expose:
      - "9000"
    environment:
      PORT: 9000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      - "postgres"
    networks:
      study_buff_service_local_net:


volumes:
  elastic_data: {}

networks:
  study_buff_service_local_net:
    driver: bridge