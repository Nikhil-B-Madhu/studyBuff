version: "3"
services:
  postgres:
    hostname: postgres
    image: "postgres:11.10-alpine"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      HTTP_PROXY: ""
      HTTPS_PROXY: ""
      http_proxy: ""
      https_proxy: ""
      no_proxy: "127.0.0.1"
    ports:
      - "32768:5432"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://postgres:5432"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      study_buff_service_local_net:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      study_buff_service_local_net:

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      study_buff_service_local_net:
      
  elasticsearch:
    container_name: elastic-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      study_buff_service_local_net:
    ports: 
      - 9200:9200
  
  kibana:
    container_name: kibana-container
    image: docker.elastic.co/kibana/kibana:7.13.4
    environment:
      - ELASTICSEARCH_HOSTS=http://elastic-container:9200
    networks:
      study_buff_service_local_net:
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601 
      
  universityservice:
    hostname: study-buff-university-service
    image: university-service:local
    build:
      context: universityService
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      - "postgres"
    networks:
      study_buff_service_local_net:

  buffUserInfoService:
    hostname: study-buff-user-info-service
    image: study-buff-user-info:local
    build:
      context: userInfoService
    ports:
      - "8080:8080"
    command: [ "npm", "run", "serve" ]
    environment:
      MESSAGEQ_URL: amqp://guest:guest@rabbitmq
      SQL_DB_URI: postgresql://postgres:postgres@postgres:5432/postgres
    depends_on:
      - "postgres"
    networks:
      study_buff_service_local_net:

networks:
  study_buff_service_local_net:
    driver: bridge
